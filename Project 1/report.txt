This is the data I entered into original.cpp

1) I ran the program with normal sensible input data. There were total of 10 registered voters, where 4 voted for Jerry and 6 voted for Neel. The compiler said that 40% voted for Jerry and 60% of people voted for Neel, and that Neel would win the election. Everything worked perfectly

2) I ran the program in such a way that the voters of Neel and the voters for Jerry did not add up to the total number of registered voters. Again, There were a total of 10 registered voters, where 4 voted for Jerry and 3 voted for Neel. The compiler said that 40% voted for Jerry and 30% of people voted for Neel, and that Jerry would win the election. Yes this is true, but not everybody voted. This shouldn’t be allowed by the compiler. All registered voters that are surveyed must vote.

3) I ran the program in such a way that the total voters were less than the voters of Neel and the voters of Jerry combined. Again, There were a total of 10 registered voters, where 15 voted for Jerry and 20 voted for Neel. The compiler said that 150% voted for Jerry and 200% of people voted for Neel, and that Neel would win the election. 150% and 200% of people cannot vote in an election in the real world, this is just a nonsensical number and therefore the answer means nothing. 

4) I ran the program with the amount of voters for Jerry and Neel as equal. Again, There were a total of 10 registered voters, 5 voted for Jerry and 5 voted for Neel. The compiler said that 50% voted for Jerry and 50% of people voted for Neel, and that Neel would win the election. This is not true, it’s a tie. 

5) I ran the program with 0 registered voters, where 0 voted for both Jerry and Neel. The compiler said that “nan% say they will vote for Jerry. nan% say they will vote for Neel. Neel is predicted to win the election.” This is not true Neel did not win the election, because the election never took place. The compiler says nan (not a number) in instead of a number because (100*0)/0 or 0/0 is undefined.

6) I ran the program with 0 registered voters, but 2 voted for Jerry and 1 voted for Neel. The compiler said that “inf% say they will vote for Jerry. inf% say they will vote for Neel. Jerry is predicted to win the election.” This is not true as nobody can vote if there aren’t any registered voters. The compiler says inf (infinity) instead of a number because (100*2)/0 is infinity and not a number. 



This is the logical error I introduced in logic_error.cpp

I flipped the comparison operator in the if statement which figures out who won the election:-

if (forJerry < forNeel)
        cout << "Jerry is predicted to win the election." << endl;
    else
        cout << "Neel is predicted to win the election." << endl;

Now if in actuality, Neel wins the election, the compiler will say that Jerry won the election and vice-versa. 



These are the two errors I introduced in compile_error.cpp

1) I removed the semi-colon after number surveyed variable declaration.

int numberSurveyed

The compiler said : Expected ‘;’ at the end of declaration

2) I changed the identifier from cout to cou

cou << "How many registered voters were surveyed? “;

The compiler said : Use of undeclared identifier ‘cou’. Did you mean cout?